name: Gradle CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:

env:
  AZURE_LOCATION: "southcentralus"
  CONTAINER_INSTANCE_NAME: ${{ vars.CONTAINER_INSTANCE_NAME }}
  CONTAINER_REGISTRY: "ghcr.io"
  CONTAINER_REGISTRY_USERNAME: ${{ github.actor }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
  WORKER_ENVIRONMENT_VARIABLES: ${{ vars.WORKER_ENVIRONMENT_VARIABLES }}
  WORKER_SECURE_ENVIRONMENT_VARIABLES: ${{ secrets.WORKER_SECURE_ENVIRONMENT_VARIABLES }}

jobs:
  deploy:
    name: Push & Deploy
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login To Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ env.CONTAINER_REGISTRY_PASSWORD }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ubuntu
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew build

      # - name: Run Docker Build & Push
      #   run: |
      #     docker build -f docker/server/Dockerfile -t ${{ env.CONTAINER_REGISTRY }}/conductor:${{ github.sha }} .
      #     docker push ${{ env.CONTAINER_REGISTRY }}/conductor:${{ github.sha }}

      - name: Deploy Conductor Worker to Azure Container Instance
        uses: Azure/aci-deploy@v1
        with:
          resource-group: ${{ env.RESOURCE_GROUP_NAME }}
          image: ${{ env.CONTAINER_REGISTRY }}/conductor:${{ github.sha }}
          name: ${{ env.CONTAINER_INSTANCE_NAME }}
          dns-name-label: ${{ env.RESOURCE_GROUP_NAME }}${{ github.run_number }}
          environment-variables: ${{ env.WORKER_ENVIRONMENT_VARIABLES }}
          secure-environment-variables: ${{ env.WORKER_SECURE_ENVIRONMENT_VARIABLES }}
          location: ${{ env.AZURE_LOCATION }}
          registry-login-server: ${{ env.CONTAINER_REGISTRY }}
          registry-username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
          registry-password: ${{ env.CONTAINER_REGISTRY_PASSWORD }}
          restart-policy: Always
          cpu: 2
          memory: 4
          ports: 8080 80
